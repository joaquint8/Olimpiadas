@using Olimpiadas2023.Enum
@implements IDisposable
@inject IMessageService message
@inject IDbContextFactory<CodigoAzulContext> DbFactory
@page "/DetallesAreas"

<div>
    <Button Type="primary" @onclick="_=>open()">Cargar Habitacion</Button>
    <Drawer Width="500" Closable="true" Visible="visible" Placement="right" Title='("Cargar Habitacion")' OnClose="_=>close()">
        <HabitacionAgregar />
    </Drawer>
</div>
<div>
    <h4>Areas del hospital disponibles</h4>
    @foreach (var area in GetAreas)
    {
        <Card Title="@area.TipoArea.ToString()" Style="width:300px;">
            <Extra>
                <a>More</a>
            </Extra>
            <Body>
                <Table DataSource="@HabitacionesFiltradas(area.AreaId)" Bordered Responsive Style="min-width:100% !important;">
                         <ColumnDefinitions Context="muestra">
                             <PropertyColumn Property="c=>c.NombreHabitacion"></PropertyColumn>
                             <PropertyColumn Property="c=>c.Capacidad"></PropertyColumn>
                             <PropertyColumn Property="c=>c.EstadoHabitacion"></PropertyColumn>
                         </ColumnDefinitions>

                     </Table>

                 </Body>
             </Card>
    }
</div>

@code {
    CodigoAzulContext Context;
    List<Area> GetAreas = new();
    List<Habitacion> GetHabitaciones = new();
    bool visible = false;

    void open()
    {
        this.visible = true;
    }

    void close()
    {
        this.visible = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await Init();
    }

    private async Task Init()
    {
        Context = DbFactory.CreateDbContext();
        GetAreas = await Context.Areas.ToListAsync();
        GetHabitaciones = await Context.Habitaciones.ToListAsync();
    }

    private List<Habitacion> HabitacionesFiltradas(int areaIdBuscar)
    {
        return Context.Habitaciones.Where(x => x.AreaId == areaIdBuscar).ToList();
    }
    public void Dispose()
    {
        Context?.Dispose();
    }
}
